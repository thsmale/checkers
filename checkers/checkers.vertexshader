#version 330 core

// Input vertex data, different for all executions of this shader.
// Each vertex can have numerous attributes like colors, or textures
// This location identifies which vertex we are referring too
//Board
layout(location = 2) in vec2 vertex_position;
// Notice that the "1" here equals the "1" in glVertexAttribPointer
//Colors
layout(location = 3) in vec3 vertexColor;



out vec3 fragmentColor;

void main(){

    gl_Position.xy = vertex_position;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    
    // The color of each vertex will be interpolated
    // to produce the color of each fragment
    fragmentColor = vertexColor;

}
